<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0213.2024                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='rate-eq-total-5#csv (rate-eq-total-5.csv)' inline='true' name='csv.41714.886763599534' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='E:\research\Scenario 5' driver='' filename='rate-eq-total-5.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='rate-eq-total-5#csv' table='[rate-eq-total-5#csv]' type='table' />
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[flowId]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[flowId]' derivation='None' name='[none:flowId:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:flowId:ok]' type='palette'>
            <map to='#0000f2'>
              <bucket>19</bucket>
            </map>
            <map to='#008c5e'>
              <bucket>17</bucket>
            </map>
            <map to='#00ffaa'>
              <bucket>20</bucket>
            </map>
            <map to='#14004d'>
              <bucket>16</bucket>
            </map>
            <map to='#1d5673'>
              <bucket>7</bucket>
            </map>
            <map to='#40fff2'>
              <bucket>10</bucket>
            </map>
            <map to='#4cd936'>
              <bucket>9</bucket>
            </map>
            <map to='#584359'>
              <bucket>13</bucket>
            </map>
            <map to='#60acbf'>
              <bucket>11</bucket>
            </map>
            <map to='#7f0033'>
              <bucket>2</bucket>
            </map>
            <map to='#806c60'>
              <bucket>14</bucket>
            </map>
            <map to='#80c4ff'>
              <bucket>1</bucket>
            </map>
            <map to='#8c3123'>
              <bucket>8</bucket>
            </map>
            <map to='#99ccb4'>
              <bucket>4</bucket>
            </map>
            <map to='#acace6'>
              <bucket>15</bucket>
            </map>
            <map to='#becc00'>
              <bucket>3</bucket>
            </map>
            <map to='#cc0000'>
              <bucket>18</bucket>
            </map>
            <map to='#f2aa79'>
              <bucket>12</bucket>
            </map>
            <map to='#ff0088'>
              <bucket>5</bucket>
            </map>
            <map to='#ff4059'>
              <bucket>6</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='PEQ-5'>
      <table>
        <view>
          <datasources>
            <datasource caption='rate-eq-total-5#csv (rate-eq-total-5.csv)' name='csv.41714.886763599534' />
          </datasources>
          <datasource-dependencies datasource='csv.41714.886763599534'>
            <column datatype='integer' name='[flowId]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[flowId]' derivation='None' name='[none:flowId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Sum' name='[sum:timestamp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[totalPackets]' derivation='Sum' name='[sum:totalPackets:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[timestamp]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[totalPackets]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41714.886763599534].[none:timestamp:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.0' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.02' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.040000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.059999999999999998' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.080000000000000002' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.10000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.12000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.14000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.16' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.17999999999999999' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.19999999999999998' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.21999999999999997' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.23999999999999996' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.25999999999999995' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.27999999999999997' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41714.886763599534].[none:timestamp:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[csv.41714.886763599534].[sum:totalPackets:qk]' value='12' />
            <format attr='color' field='[csv.41714.886763599534].[sum:totalPackets:qk]' value='#000000' />
            <format attr='font-size' field='[csv.41714.886763599534].[sum:timestamp:qk]' value='12' />
            <format attr='color' field='[csv.41714.886763599534].[sum:timestamp:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41714.886763599534].[none:flowId:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41714.886763599534].[sum:totalPackets:qk]</rows>
        <cols>[csv.41714.886763599534].[sum:timestamp:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='PEQ-5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41714.886763599534].[none:flowId:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41714.886763599534].[none:flowId:ok]</field>
          <field>[csv.41714.886763599534].[none:timestamp:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='144' name='Sheet 1' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAIAAAAeHsdkAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABQElEQVR4nO3SMQHAMAzAsKz8OWePObSHhMCHv90dmDm3A3iF
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFcgP9eEEHcxAtUgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PEQ-5' width='192'>
      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
      Ej9DH9Hu+cAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
