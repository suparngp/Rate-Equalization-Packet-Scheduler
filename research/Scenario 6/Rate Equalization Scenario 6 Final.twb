<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0213.2024                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='rate-eq-total-6#csv (rate-eq-total-6.csv)' inline='true' name='csv.41714.909156666668' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='E:\research\Scenario 6' driver='' filename='rate-eq-total-6.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='rate-eq-total-6#csv' table='[rate-eq-total-6#csv]' type='table' />
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[flowId]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[flowId]' derivation='None' name='[none:flowId:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:flowId:ok]' type='palette'>
            <map to='#0000f2'>
              <bucket>19</bucket>
            </map>
            <map to='#008c5e'>
              <bucket>17</bucket>
            </map>
            <map to='#00ffaa'>
              <bucket>20</bucket>
            </map>
            <map to='#14004d'>
              <bucket>16</bucket>
            </map>
            <map to='#1d5673'>
              <bucket>7</bucket>
            </map>
            <map to='#40fff2'>
              <bucket>10</bucket>
            </map>
            <map to='#4cd936'>
              <bucket>9</bucket>
            </map>
            <map to='#584359'>
              <bucket>13</bucket>
            </map>
            <map to='#60acbf'>
              <bucket>11</bucket>
            </map>
            <map to='#7f0033'>
              <bucket>2</bucket>
            </map>
            <map to='#806c60'>
              <bucket>14</bucket>
            </map>
            <map to='#80c4ff'>
              <bucket>1</bucket>
            </map>
            <map to='#8c3123'>
              <bucket>8</bucket>
            </map>
            <map to='#99ccb4'>
              <bucket>4</bucket>
            </map>
            <map to='#acace6'>
              <bucket>15</bucket>
            </map>
            <map to='#becc00'>
              <bucket>3</bucket>
            </map>
            <map to='#cc0000'>
              <bucket>18</bucket>
            </map>
            <map to='#f2aa79'>
              <bucket>12</bucket>
            </map>
            <map to='#ff0088'>
              <bucket>5</bucket>
            </map>
            <map to='#ff4059'>
              <bucket>6</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='PEQ-6'>
      <table>
        <view>
          <datasources>
            <datasource caption='rate-eq-total-6#csv (rate-eq-total-6.csv)' name='csv.41714.909156666668' />
          </datasources>
          <datasource-dependencies datasource='csv.41714.909156666668'>
            <column datatype='integer' name='[flowId]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[flowId]' derivation='None' name='[none:flowId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Sum' name='[sum:timestamp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[totalPackets]' derivation='Sum' name='[sum:totalPackets:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[timestamp]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[totalPackets]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41714.909156666668].[none:timestamp:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.0' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.02' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.040000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.059999999999999998' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.080000000000000002' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.10000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.12000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.14000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.16' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.17999999999999999' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.19999999999999998' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.21999999999999997' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.23999999999999996' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.25999999999999995' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.27999999999999997' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41714.909156666668].[none:timestamp:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[csv.41714.909156666668].[sum:totalPackets:qk]' value='12' />
            <format attr='color' field='[csv.41714.909156666668].[sum:totalPackets:qk]' value='#000000' />
            <format attr='font-size' field='[csv.41714.909156666668].[sum:timestamp:qk]' value='12' />
            <format attr='color' field='[csv.41714.909156666668].[sum:timestamp:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41714.909156666668].[none:flowId:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41714.909156666668].[sum:totalPackets:qk]</rows>
        <cols>[csv.41714.909156666668].[sum:timestamp:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='PEQ-6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41714.909156666668].[none:flowId:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41714.909156666668].[none:flowId:ok]</field>
          <field>[csv.41714.909156666668].[none:timestamp:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='144' name='Sheet 1' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAIAAAAeHsdkAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABQElEQVR4nO3SMQHAMAzAsKz8OWePObSHhMCHv90dmDm3A3iF
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFcgP9eEEHcxAtUgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PEQ-6' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
