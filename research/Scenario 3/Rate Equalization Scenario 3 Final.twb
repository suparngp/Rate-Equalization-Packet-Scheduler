<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0213.2024                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='rate-eq-total-3#csv (rate-eq-total-3.csv)' inline='true' name='csv.41714.881815312503' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='E:\research\Scenario 3' driver='' filename='rate-eq-total-3.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='rate-eq-total-3#csv' table='[rate-eq-total-3#csv]' type='table' />
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[flowId]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[flowId]' derivation='None' name='[none:flowId:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:flowId:ok]' type='palette'>
            <map to='#00cc99'>
              <bucket>19</bucket>
            </map>
            <map to='#0d98ba'>
              <bucket>12</bucket>
            </map>
            <map to='#1f75fe'>
              <bucket>9</bucket>
            </map>
            <map to='#6699cc'>
              <bucket>11</bucket>
            </map>
            <map to='#6e5160'>
              <bucket>24</bucket>
            </map>
            <map to='#7366bd'>
              <bucket>13</bucket>
            </map>
            <map to='#78dbe2'>
              <bucket>4</bucket>
            </map>
            <map to='#87a96b'>
              <bucket>5</bucket>
            </map>
            <map to='#a2a2d0'>
              <bucket>10</bucket>
            </map>
            <map to='#aaf0d1'>
              <bucket>29</bucket>
            </map>
            <map to='#ace5ee'>
              <bucket>8</bucket>
            </map>
            <map to='#b0b7c6'>
              <bucket>17</bucket>
            </map>
            <map to='#bc5d58'>
              <bucket>22</bucket>
            </map>
            <map to='#c364c5'>
              <bucket>25</bucket>
            </map>
            <map to='#ca3767'>
              <bucket>28</bucket>
            </map>
            <map to='#cb4154'>
              <bucket>15</bucket>
            </map>
            <map to='#cc6666'>
              <bucket>26</bucket>
            </map>
            <map to='#cd9575'>
              <bucket>3</bucket>
            </map>
            <map to='#dd4492'>
              <bucket>21</bucket>
            </map>
            <map to='#de5d83'>
              <bucket>14</bucket>
            </map>
            <map to='#ef98aa'>
              <bucket>30</bucket>
            </map>
            <map to='#efdecd'>
              <bucket>2</bucket>
            </map>
            <map to='#fd7c6e'>
              <bucket>7</bucket>
            </map>
            <map to='#ff1dce'>
              <bucket>27</bucket>
            </map>
            <map to='#ff2b2b'>
              <bucket>1</bucket>
            </map>
            <map to='#ff7f49'>
              <bucket>16</bucket>
            </map>
            <map to='#ffa474'>
              <bucket>6</bucket>
            </map>
            <map to='#ffaacc'>
              <bucket>20</bucket>
            </map>
            <map to='#ffbcd9'>
              <bucket>23</bucket>
            </map>
            <map to='#ffff99'>
              <bucket>18</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='PEQ-3'>
      <table>
        <view>
          <datasources>
            <datasource caption='rate-eq-total-3#csv (rate-eq-total-3.csv)' name='csv.41714.881815312503' />
          </datasources>
          <datasource-dependencies datasource='csv.41714.881815312503'>
            <column datatype='integer' name='[flowId]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[flowId]' derivation='None' name='[none:flowId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='None' name='[none:timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[timestamp]' derivation='Sum' name='[sum:timestamp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[totalPackets]' derivation='Sum' name='[sum:totalPackets:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[timestamp]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[totalPackets]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41714.881815312503].[none:timestamp:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.0' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.02' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.040000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.059999999999999998' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.080000000000000002' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.10000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.12000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.14000000000000001' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.16' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.17999999999999999' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.19999999999999998' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.21999999999999997' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.23999999999999996' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.25999999999999995' />
              <groupfilter function='member' level='[none:timestamp:ok]' member='0.27999999999999997' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41714.881815312503].[none:timestamp:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[csv.41714.881815312503].[sum:totalPackets:qk]' value='12' />
            <format attr='color' field='[csv.41714.881815312503].[sum:totalPackets:qk]' value='#000000' />
            <format attr='font-size' field='[csv.41714.881815312503].[sum:timestamp:qk]' value='12' />
            <format attr='color' field='[csv.41714.881815312503].[sum:timestamp:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41714.881815312503].[none:flowId:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41714.881815312503].[sum:totalPackets:qk]</rows>
        <cols>[csv.41714.881815312503].[sum:timestamp:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='PEQ-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41714.881815312503].[none:flowId:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41714.881815312503].[none:flowId:ok]</field>
          <field>[csv.41714.881815312503].[none:timestamp:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='144' name='Sheet 1' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAIAAAAeHsdkAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABQElEQVR4nO3SMQHAMAzAsKz8OWePObSHhMCHv90dmDm3A3iF
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFcgP9eEEHcxAtUgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PEQ-3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
